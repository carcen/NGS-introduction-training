{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NGS - Quality control, Alignment, Visualisation Learning outcomes After this course, you will be able to: Understand the basics of the different NGS technologies Perform quality control for better downstream analysis Align reads to a reference genome Visualize the output Learning experiences This course will consist of lectures, practicals and polls. During practicals and polls, you are free to discuss with other participants. During lectures, focus on the lecture only. Asking questions During lectures, raise your hand if: things aren\u2019t clear you think your question is of direct interest to other participants A main source of communication will be our slack channel . During the practicals, use the slack channel #peer-q-and-a to ask any question. This channel is not only meant for asking questions but also for answering questions of other students. Answer questions only if you have finished the practical block, and use the \u201canswer in thread\u201d option. The teacher will review the answers, and add/modify if necessary. Practicals Each block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we\u2019ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different. Each practical unit has an expected time to complete. Let us know if you\u2019re finished in the slack poll at the channel #polls. When most participants have finished before the expected time, we\u2019ll discuss it right away. If most participants aren\u2019t finished at the expected time, we\u2019ll postpone the discussion.","title":"Home"},{"location":"#ngs-quality-control-alignment-visualisation","text":"","title":"NGS - Quality control, Alignment, Visualisation"},{"location":"#learning-outcomes","text":"After this course, you will be able to: Understand the basics of the different NGS technologies Perform quality control for better downstream analysis Align reads to a reference genome Visualize the output","title":"Learning outcomes"},{"location":"#learning-experiences","text":"This course will consist of lectures, practicals and polls. During practicals and polls, you are free to discuss with other participants. During lectures, focus on the lecture only.","title":"Learning experiences"},{"location":"#asking-questions","text":"During lectures, raise your hand if: things aren\u2019t clear you think your question is of direct interest to other participants A main source of communication will be our slack channel . During the practicals, use the slack channel #peer-q-and-a to ask any question. This channel is not only meant for asking questions but also for answering questions of other students. Answer questions only if you have finished the practical block, and use the \u201canswer in thread\u201d option. The teacher will review the answers, and add/modify if necessary.","title":"Asking questions"},{"location":"#practicals","text":"Each block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we\u2019ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different. Each practical unit has an expected time to complete. Let us know if you\u2019re finished in the slack poll at the channel #polls. When most participants have finished before the expected time, we\u2019ll discuss it right away. If most participants aren\u2019t finished at the expected time, we\u2019ll postpone the discussion.","title":"Practicals"},{"location":"course_schedule/","text":"Day 1 block start end subject introduction 9:00 AM 9:30 AM Introduction block 1 9:30 AM 10:30 AM Sequencing technologies 10:30 AM 11:00 AM BREAK block 2 11:00 AM 12:30 PM Server login + unix fresh up 12:30 PM 1:30 PM BREAK block 3 1:30 PM 3:00 PM Quality control 3:00 PM 3:30 PM BREAK block 4 3:30 PM 5:00 PM Read alignment Day 2 block start end subject block 1 9:00 AM 10:30 AM File types 10:30 AM 11:00 AM BREAK block 2 11:00 AM 12:30 PM Samtools 12:30 PM 1:30 PM BREAK block 3 1:30 PM 3:00 PM IGV and visualisation 3:00 PM 3:30 PM BREAK block 4 3:30 PM 5:00 PM Group work - organisation Day 3 block start end subject 9:00 AM 3:00 PM Group work 3:30 PM 5:00 PM Presentations","title":"Course schedule"},{"location":"course_schedule/#day-1","text":"block start end subject introduction 9:00 AM 9:30 AM Introduction block 1 9:30 AM 10:30 AM Sequencing technologies 10:30 AM 11:00 AM BREAK block 2 11:00 AM 12:30 PM Server login + unix fresh up 12:30 PM 1:30 PM BREAK block 3 1:30 PM 3:00 PM Quality control 3:00 PM 3:30 PM BREAK block 4 3:30 PM 5:00 PM Read alignment","title":"Day 1"},{"location":"course_schedule/#day-2","text":"block start end subject block 1 9:00 AM 10:30 AM File types 10:30 AM 11:00 AM BREAK block 2 11:00 AM 12:30 PM Samtools 12:30 PM 1:30 PM BREAK block 3 1:30 PM 3:00 PM IGV and visualisation 3:00 PM 3:30 PM BREAK block 4 3:30 PM 5:00 PM Group work - organisation","title":"Day 2"},{"location":"course_schedule/#day-3","text":"block start end subject 9:00 AM 3:00 PM Group work 3:30 PM 5:00 PM Presentations","title":"Day 3"},{"location":"day3/","text":"Details on organisation and projects can be found at documentation of day 2 . During the projects The time to do the projects is limited, so if you\u2019re stuck: don\u2019t hesitate to ask questions If you have time left, consider to add an evaluation, like: The effect of varying specific arguments The effect of trimming/not trimming Another aligner of your choice","title":"Day 3"},{"location":"day3/#during-the-projects","text":"The time to do the projects is limited, so if you\u2019re stuck: don\u2019t hesitate to ask questions If you have time left, consider to add an evaluation, like: The effect of varying specific arguments The effect of trimming/not trimming Another aligner of your choice","title":"During the projects"},{"location":"day1/intro/","text":"Expectations Use the poll at the #poll channel to let us know your expectations of this course. Get to know each other","title":"Introduction"},{"location":"day1/intro/#expectations","text":"Use the poll at the #poll channel to let us know your expectations of this course.","title":"Expectations"},{"location":"day1/intro/#get-to-know-each-other","text":"","title":"Get to know each other"},{"location":"day1/quality_control/","text":"Material fastqc command line documentation trimmomatic manual Unix command line E-utilities documentation Exercises 1. Download and evaluate an E. coli dataset 30 minutes Exercise: Create a directory called ecoli in your home directory and make the directory your current directory Answer cd /home/training mkdir ecoli cd ecoli Check out the dataset at SRA . Exercise: Browse around the SRA entry and answer these questions: A. Is the dataset paired-end or single end? B. Which instrument was used for sequencing? C. What is the read length? D. How many reads do we have? Answers A. paired-end B. Illumina MiSeq C. 2 x 252 bp D. 400596 Make a directory reads and download the reads from the SRA database using fastq-dump from SRA-Tools into the reads directory: mkdir reads cd reads fastq-dump --split-files SRR519926 Exercise: Check whether the download was successful by counting the number of reads in the fastq files. Tip A read in a fastq file consists of four lines (more on that at file types ). Use Google to figure out how to count the number of reads in a fastq file. Answer e.g. from this thread on Biostars: ## forward read echo $( cat SRR519926_1.fastq | wc -l ) /4 | bc ## reverse read echo $( cat SRR519926_2.fastq | wc -l ) /4 | bc 2. Run fastqc 20 minutes Exercise: Run fastqc on the fastq files. Tip fastqc accepts multiple files as input, so you can use a wildcard to run fastqc on all the files in one line of code. Use it like this: *.fastq . Answer fastqc *.fastq Exercise: Download the html files to your local computer, and view the results. How is the quality? Where are the problems? Answer There seems to be: Low quality towards the 3\u2019 end (per base sequence quality) Full sequence reads with low quality (per sequence quality scores) Adapters in the sequences (adapter content) We can probably fix most of these issues by trimming. 3. Trim the reads 20 minutes We will use trimmomatic for trimming low quality and spurious bases from our reads. For paired-end data it generates four different trimmed fastq files. If one of the paired-end reads doesn\u2019t meet the quality thresholds, it will be discarded, but the other read might be kept. Therefore, trimmomatic outputs contains files with unpaired reads as well. Usually those files are very small compared to the paired reads, and are often ignored for downstream analyses. Trimmomatic syntax is rather complicated and different from most tools. Refer to the manual if you want to go deeper into this. Exercise: The script below will trim the sequence reads in a sensible manner. Execute the script to trim the data: ##!/usr/bin/env bash TRIMMOMATIC_DIR = /usr/share/Trimmomatic-0.36 TRIMMED_DIR = ~/ecoli/trimmed_data READS_DIR = ~/ecoli/reads mkdir $TRIMMED_DIR java -jar trimmomatic \\ PE \\ -threads 1 \\ -phred33 \\ $READS_DIR /SRR519926_1.fastq \\ $READS_DIR /SRR519926_2.fastq \\ $TRIMMED_DIR /paired_trimmed_SRR519926_1.fastq \\ $TRIMMED_DIR /unpaired_trimmed_SRR519926_1.fastq \\ $TRIMMED_DIR /paired_trimmed_SRR519926_2.fastq \\ $TRIMMED_DIR /unpaired_trimmed_SRR519926_2.fastq \\ ILLUMINACLIP: $TRIMMOMATIC_DIR /adapters/TruSeq3-PE.fa:2:30:10 \\ SLIDINGWINDOW:4:5 \\ LEADING:5 \\ TRAILING:5 \\ MINLEN:25 The use of \\ In the script above you see that we\u2019re using \\ at the end of many lines. We use it to tell bash to ignore the newlines. If we would not do it, the trimmomatic command would become a very long line, and the script would become very difficult to read. It is in general good practice to put every option of a long command on a newline in your script and use \\ to ignore the newlines when executing. Exercise: Run fastqc on the trimmed fastq files and answer these questions: A. Has the quality improved? B. How many reads do we have left? C. There are more unpaired forward reads compared to reverse reads. Does this make sense? Answers Running fastqc : cd ~/ecoli/trimmed_data fastqc paired_trimmed*.fastqc A. Yes, low quality 3\u2019 end, per sequence quality and adapter sequences have improved. B. 264781 C. Again, Google to the rescue","title":"Quality control"},{"location":"day1/quality_control/#material","text":"fastqc command line documentation trimmomatic manual Unix command line E-utilities documentation","title":"Material"},{"location":"day1/quality_control/#exercises","text":"","title":"Exercises"},{"location":"day1/quality_control/#1-download-and-evaluate-an-e-coli-dataset","text":"30 minutes Exercise: Create a directory called ecoli in your home directory and make the directory your current directory Answer cd /home/training mkdir ecoli cd ecoli Check out the dataset at SRA . Exercise: Browse around the SRA entry and answer these questions: A. Is the dataset paired-end or single end? B. Which instrument was used for sequencing? C. What is the read length? D. How many reads do we have? Answers A. paired-end B. Illumina MiSeq C. 2 x 252 bp D. 400596 Make a directory reads and download the reads from the SRA database using fastq-dump from SRA-Tools into the reads directory: mkdir reads cd reads fastq-dump --split-files SRR519926 Exercise: Check whether the download was successful by counting the number of reads in the fastq files. Tip A read in a fastq file consists of four lines (more on that at file types ). Use Google to figure out how to count the number of reads in a fastq file. Answer e.g. from this thread on Biostars: ## forward read echo $( cat SRR519926_1.fastq | wc -l ) /4 | bc ## reverse read echo $( cat SRR519926_2.fastq | wc -l ) /4 | bc","title":"1. Download and evaluate an E. coli dataset"},{"location":"day1/quality_control/#2-run-fastqc","text":"20 minutes Exercise: Run fastqc on the fastq files. Tip fastqc accepts multiple files as input, so you can use a wildcard to run fastqc on all the files in one line of code. Use it like this: *.fastq . Answer fastqc *.fastq Exercise: Download the html files to your local computer, and view the results. How is the quality? Where are the problems? Answer There seems to be: Low quality towards the 3\u2019 end (per base sequence quality) Full sequence reads with low quality (per sequence quality scores) Adapters in the sequences (adapter content) We can probably fix most of these issues by trimming.","title":"2. Run fastqc"},{"location":"day1/quality_control/#3-trim-the-reads","text":"20 minutes We will use trimmomatic for trimming low quality and spurious bases from our reads. For paired-end data it generates four different trimmed fastq files. If one of the paired-end reads doesn\u2019t meet the quality thresholds, it will be discarded, but the other read might be kept. Therefore, trimmomatic outputs contains files with unpaired reads as well. Usually those files are very small compared to the paired reads, and are often ignored for downstream analyses. Trimmomatic syntax is rather complicated and different from most tools. Refer to the manual if you want to go deeper into this. Exercise: The script below will trim the sequence reads in a sensible manner. Execute the script to trim the data: ##!/usr/bin/env bash TRIMMOMATIC_DIR = /usr/share/Trimmomatic-0.36 TRIMMED_DIR = ~/ecoli/trimmed_data READS_DIR = ~/ecoli/reads mkdir $TRIMMED_DIR java -jar trimmomatic \\ PE \\ -threads 1 \\ -phred33 \\ $READS_DIR /SRR519926_1.fastq \\ $READS_DIR /SRR519926_2.fastq \\ $TRIMMED_DIR /paired_trimmed_SRR519926_1.fastq \\ $TRIMMED_DIR /unpaired_trimmed_SRR519926_1.fastq \\ $TRIMMED_DIR /paired_trimmed_SRR519926_2.fastq \\ $TRIMMED_DIR /unpaired_trimmed_SRR519926_2.fastq \\ ILLUMINACLIP: $TRIMMOMATIC_DIR /adapters/TruSeq3-PE.fa:2:30:10 \\ SLIDINGWINDOW:4:5 \\ LEADING:5 \\ TRAILING:5 \\ MINLEN:25 The use of \\ In the script above you see that we\u2019re using \\ at the end of many lines. We use it to tell bash to ignore the newlines. If we would not do it, the trimmomatic command would become a very long line, and the script would become very difficult to read. It is in general good practice to put every option of a long command on a newline in your script and use \\ to ignore the newlines when executing. Exercise: Run fastqc on the trimmed fastq files and answer these questions: A. Has the quality improved? B. How many reads do we have left? C. There are more unpaired forward reads compared to reverse reads. Does this make sense? Answers Running fastqc : cd ~/ecoli/trimmed_data fastqc paired_trimmed*.fastqc A. Yes, low quality 3\u2019 end, per sequence quality and adapter sequences have improved. B. 264781 C. Again, Google to the rescue","title":"3. Trim the reads"},{"location":"day1/read_alignment/","text":"Material Unix command line E-utilities documentation bowtie2 manual Exercises 1. Prepare the reference sequence 10 minutes Retrieve the reference sequence using esearch and efetch : REFERENCE_DIR = /home/training/ecoli/ref_genome/ mkdir $REFERENCE_DIR cd $REFERENCE_DIR esearch -db nuccore -query 'U00096' \\ | efetch -format fasta > ecoli-strK12-MG1655.fasta Exercise: Check out the documentation of bowtie2-build , and build a index for bowtie2 using default options. Answer bowtie2-build ecoli-strK12-MG1655.fasta ecoli-strK12-MG1655.fasta 2. Align the reads with bowtie2 20 minutes Exercise: Check out the bowtie2 manual here . We are going to align the sequences in paired-end mode. What are the options we\u2019ll minimally need? Answer According to the usage of bowtie2 : bowtie2 [ options ] * -x <bt2-idx> { -1 <m1> -2 <m2> | -U <r> | --interleaved <i> | --sra-acc <acc> | b <bam> } We\u2019ll need the options: -x to point to our index -1 and -2 to point to our forward and reverse reads Exercise: Try to understand what the script below does, and run it. ##!/usr/bin/env bash TRIMMED_DIR = /home/training/ecoli/trimmed_data REFERENCE_DIR = /home/training/ecoli/ref_genome/ MAPPED_DIR = /home/training/ecoli/mapping_output mkdir $MAPPED_DIR bowtie2 \\ -x $REFERENCE_DIR /ecoli-strK12-MG1655.fasta \\ -1 $TRIMMED_DIR /paired_trimmed_SRR519926_1.fastq \\ -2 $TRIMMED_DIR /paired_trimmed_SRR519926_2.fastq \\ > $MAPPED_DIR /SRR519926.sam","title":"Read alignment"},{"location":"day1/read_alignment/#material","text":"Unix command line E-utilities documentation bowtie2 manual","title":"Material"},{"location":"day1/read_alignment/#exercises","text":"","title":"Exercises"},{"location":"day1/read_alignment/#1-prepare-the-reference-sequence","text":"10 minutes Retrieve the reference sequence using esearch and efetch : REFERENCE_DIR = /home/training/ecoli/ref_genome/ mkdir $REFERENCE_DIR cd $REFERENCE_DIR esearch -db nuccore -query 'U00096' \\ | efetch -format fasta > ecoli-strK12-MG1655.fasta Exercise: Check out the documentation of bowtie2-build , and build a index for bowtie2 using default options. Answer bowtie2-build ecoli-strK12-MG1655.fasta ecoli-strK12-MG1655.fasta","title":"1. Prepare the reference sequence"},{"location":"day1/read_alignment/#2-align-the-reads-with-bowtie2","text":"20 minutes Exercise: Check out the bowtie2 manual here . We are going to align the sequences in paired-end mode. What are the options we\u2019ll minimally need? Answer According to the usage of bowtie2 : bowtie2 [ options ] * -x <bt2-idx> { -1 <m1> -2 <m2> | -U <r> | --interleaved <i> | --sra-acc <acc> | b <bam> } We\u2019ll need the options: -x to point to our index -1 and -2 to point to our forward and reverse reads Exercise: Try to understand what the script below does, and run it. ##!/usr/bin/env bash TRIMMED_DIR = /home/training/ecoli/trimmed_data REFERENCE_DIR = /home/training/ecoli/ref_genome/ MAPPED_DIR = /home/training/ecoli/mapping_output mkdir $MAPPED_DIR bowtie2 \\ -x $REFERENCE_DIR /ecoli-strK12-MG1655.fasta \\ -1 $TRIMMED_DIR /paired_trimmed_SRR519926_1.fastq \\ -2 $TRIMMED_DIR /paired_trimmed_SRR519926_2.fastq \\ > $MAPPED_DIR /SRR519926.sam","title":"2. Align the reads with bowtie2"},{"location":"day1/sequencing_technologies/","text":"Material Download the presentation Illumina sequencing by synthesis on YouTube","title":"Sequencing technologies"},{"location":"day1/sequencing_technologies/#material","text":"Download the presentation Illumina sequencing by synthesis on YouTube","title":"Material"},{"location":"day1/server_login/","text":"Material Setup We will be mainly working on an Amazon Web Services ( AWS ) Elastic Cloud (EC2) server. Our Ubuntu server behaves like a \u2018normal\u2019 remote server, and can be approached through ssh with a username, key and IP address. All participants will be granted access to a personal home directory. Before the course, make sure you can comfortably work on a remote server. This means that you can approach it through the shell, modify scripts and transfer files: mac OS/Linux SSH and scripting: Atom with packages like: platform-ide-terminal and remote-edit-ni Transferring files: FileZilla Integrative Genomics Viewer (IGV) Windows SSH and scripting: MobaXterm and Notepad++ Transferring files: FileZilla Integrative Genomics Viewer (IGV) Working on the cloud server Great power comes with great responsibility The cloud server is a temporary instance for this workshop only. Although the computational resources should be more than enough, it\u2019s a basic Ubuntu server, and there are no hard limits on memory or CPU usage. Take therefore into account that great power comes with great responsibility. Overloading it can result in a reboot, cancelling all running calculations. Visualisation of results Many results come in an image (e.g. .png , .jpg ) or html format. These can not be viewed directly from the server. Therefore, transfer them to your local PC first (with e.g. FileZilla or scp ), or mount the server with sshfs (more info here ). Exercises 1. First login 30 minutes Login to AWS EC2 remote server You will receive an e-mail shortly before the workshop with a key, username and IP address to login on a cloud server. Login like this: ssh -i path/to/key/key_ [ USERNAME ] .pem [ USERNAME ] @ [ AWS_IP ] Setup your favourite editor to work remotely To directly initiate and modify scripts on the remote server you can use plugins: Notepadd++: NppFTP Atom: remote-edit-ni With the following details: protocol: sftp username: your username hostname: server IP port: 22 authentication/logon type: path to private key file 2. A UNIX command line interface (CLI) refresher 30 minutes Most bioinformatics software are UNIX based and are executed through the CLI. When working with NGS data, it is therefore convenient to improve your knowledge on UNIX. For this course, we need basic understanding of UNIX CLI, so here are some exercises to refresh your memory. Make a new directory Make a directory called reads in your home directory, and make it your current directory. Answer cd mkdir reads cd reads File permissions Generate an empty file in your newly made directory like this: cd ~/reads touch new_file.txt Can you use this file as an executable script? Answer Use ls to get the file permissions: ls -l This will give you something like: -rw-r--r-- 1 geertvangeest staff 0 Sep 21 13:38 new_file.txt In any of the user, group or other permissions, there is no x for execute. This means it is not executable Redirection: > and | In /home you\u2019ll find a directory for all users with an account. Write all usernames to a file called usernames.txt . Answer cd /home ls > ~/usernames.txt The command wc -l counts the number of lines, and can read from stdin. Make a one-liner with a pipe | symbol to find out how many users have an account on this server. Answer cd /home ls | wc -l Variables Store usernames.txt as variable (like this: VAR=variable ), and use wc -l on that variable to count the number of lines in the file. Answer FILE = usernames.txt wc -l $FILE shell scripts Make a shell script that automatically counts the current number of account-holders. Answer Make a script called e.g. current_accounts.sh : #!/usr/bin/env bash cd /home ls | wc -l 3. Detaching a job 20 minutes On this server, there is no job scheduler, so everything is run directly from the command line. That means that if a process is running, the command line will be busy, and the job will be killed upon logout. To circumvent this, there are several methods to \u2018detach\u2019 the screen or prevent a \u2018hangup signal\u2019 of a job runnig in the background that will terminate your running job. The software screen or tmux can be used to detach your screen, and all messages to stderr or stdout (if not redirected) will be printed to the (detached) console. Use those if you\u2019re comfortable with them. Another, more basic, program to prevent the \u2018hangup signal\u2019 is nohup . Use it like so: nohup [ YOUR COMMAND ] & So, for running e.g. a shell script this would be: nohup script.sh & Anything written to stdout or stderr will be written to the file nohup.out in your current working directory. Don\u2019t change your script while running nohup runs through your script line-by-line and reads it from disk. If you change your script while running it, it will run the new lines. Generate a script that waits for 120 seconds (use sleep ) and prints I'm done! to stdout if it\u2019s done. Answer Script called wait.sh : #!/usr/bin/env bash sleep 120 echo \"I'm done!\" Run this script in the background without a hangup signal (so, by using nohup ), logout, and login again, and see if it\u2019s still running with ps x . Answer nohup wait.sh & Remember the PID, logout and login (within 120 seconds.. ) ps x","title":"Server login"},{"location":"day1/server_login/#material","text":"","title":"Material"},{"location":"day1/server_login/#setup","text":"We will be mainly working on an Amazon Web Services ( AWS ) Elastic Cloud (EC2) server. Our Ubuntu server behaves like a \u2018normal\u2019 remote server, and can be approached through ssh with a username, key and IP address. All participants will be granted access to a personal home directory. Before the course, make sure you can comfortably work on a remote server. This means that you can approach it through the shell, modify scripts and transfer files: mac OS/Linux SSH and scripting: Atom with packages like: platform-ide-terminal and remote-edit-ni Transferring files: FileZilla Integrative Genomics Viewer (IGV) Windows SSH and scripting: MobaXterm and Notepad++ Transferring files: FileZilla Integrative Genomics Viewer (IGV)","title":"Setup"},{"location":"day1/server_login/#working-on-the-cloud-server","text":"Great power comes with great responsibility The cloud server is a temporary instance for this workshop only. Although the computational resources should be more than enough, it\u2019s a basic Ubuntu server, and there are no hard limits on memory or CPU usage. Take therefore into account that great power comes with great responsibility. Overloading it can result in a reboot, cancelling all running calculations.","title":"Working on the cloud server"},{"location":"day1/server_login/#visualisation-of-results","text":"Many results come in an image (e.g. .png , .jpg ) or html format. These can not be viewed directly from the server. Therefore, transfer them to your local PC first (with e.g. FileZilla or scp ), or mount the server with sshfs (more info here ).","title":"Visualisation of results"},{"location":"day1/server_login/#exercises","text":"","title":"Exercises"},{"location":"day1/server_login/#1-first-login","text":"30 minutes","title":"1. First login"},{"location":"day1/server_login/#login-to-aws-ec2-remote-server","text":"You will receive an e-mail shortly before the workshop with a key, username and IP address to login on a cloud server. Login like this: ssh -i path/to/key/key_ [ USERNAME ] .pem [ USERNAME ] @ [ AWS_IP ]","title":"Login to AWS EC2 remote server"},{"location":"day1/server_login/#setup-your-favourite-editor-to-work-remotely","text":"To directly initiate and modify scripts on the remote server you can use plugins: Notepadd++: NppFTP Atom: remote-edit-ni With the following details: protocol: sftp username: your username hostname: server IP port: 22 authentication/logon type: path to private key file","title":"Setup your favourite editor to work remotely"},{"location":"day1/server_login/#2-a-unix-command-line-interface-cli-refresher","text":"30 minutes Most bioinformatics software are UNIX based and are executed through the CLI. When working with NGS data, it is therefore convenient to improve your knowledge on UNIX. For this course, we need basic understanding of UNIX CLI, so here are some exercises to refresh your memory.","title":"2. A UNIX command line interface (CLI) refresher"},{"location":"day1/server_login/#make-a-new-directory","text":"Make a directory called reads in your home directory, and make it your current directory. Answer cd mkdir reads cd reads","title":"Make a new directory"},{"location":"day1/server_login/#file-permissions","text":"Generate an empty file in your newly made directory like this: cd ~/reads touch new_file.txt Can you use this file as an executable script? Answer Use ls to get the file permissions: ls -l This will give you something like: -rw-r--r-- 1 geertvangeest staff 0 Sep 21 13:38 new_file.txt In any of the user, group or other permissions, there is no x for execute. This means it is not executable","title":"File permissions"},{"location":"day1/server_login/#redirection-and","text":"In /home you\u2019ll find a directory for all users with an account. Write all usernames to a file called usernames.txt . Answer cd /home ls > ~/usernames.txt The command wc -l counts the number of lines, and can read from stdin. Make a one-liner with a pipe | symbol to find out how many users have an account on this server. Answer cd /home ls | wc -l","title":"Redirection: &gt; and |"},{"location":"day1/server_login/#variables","text":"Store usernames.txt as variable (like this: VAR=variable ), and use wc -l on that variable to count the number of lines in the file. Answer FILE = usernames.txt wc -l $FILE","title":"Variables"},{"location":"day1/server_login/#shell-scripts","text":"Make a shell script that automatically counts the current number of account-holders. Answer Make a script called e.g. current_accounts.sh : #!/usr/bin/env bash cd /home ls | wc -l","title":"shell scripts"},{"location":"day1/server_login/#3-detaching-a-job","text":"20 minutes On this server, there is no job scheduler, so everything is run directly from the command line. That means that if a process is running, the command line will be busy, and the job will be killed upon logout. To circumvent this, there are several methods to \u2018detach\u2019 the screen or prevent a \u2018hangup signal\u2019 of a job runnig in the background that will terminate your running job. The software screen or tmux can be used to detach your screen, and all messages to stderr or stdout (if not redirected) will be printed to the (detached) console. Use those if you\u2019re comfortable with them. Another, more basic, program to prevent the \u2018hangup signal\u2019 is nohup . Use it like so: nohup [ YOUR COMMAND ] & So, for running e.g. a shell script this would be: nohup script.sh & Anything written to stdout or stderr will be written to the file nohup.out in your current working directory. Don\u2019t change your script while running nohup runs through your script line-by-line and reads it from disk. If you change your script while running it, it will run the new lines. Generate a script that waits for 120 seconds (use sleep ) and prints I'm done! to stdout if it\u2019s done. Answer Script called wait.sh : #!/usr/bin/env bash sleep 120 echo \"I'm done!\" Run this script in the background without a hangup signal (so, by using nohup ), logout, and login again, and see if it\u2019s still running with ps x . Answer nohup wait.sh & Remember the PID, logout and login (within 120 seconds.. ) ps x","title":"3. Detaching a job"},{"location":"day2/file_types/","text":"Material File definition websites: FASTQ (wikipedia) GFF (ensembl) VCF (Wikipedia) SAM: Wikipedia samtools Zhuyi Xue","title":"File types"},{"location":"day2/file_types/#material","text":"File definition websites: FASTQ (wikipedia) GFF (ensembl) VCF (Wikipedia) SAM: Wikipedia samtools Zhuyi Xue","title":"Material"},{"location":"day2/group_work/","text":"The last part of this course will be project-based-learning. This means that you will work in groups on a single question. We will split up into groups of four people. The projects There are two different projects you can choose from: Evaluate two aligners to align short-read RNA-seq data Evaluate two aligners to align long-read genomic data Roles & organisation For both projects, there are three important components: What makes an aligner suitable for the job, i.e. on what features should it be evaluated? Run and visualise the alignment The evaluation itself We will be working in groups of four people. At the start of the project, 2 people will focus on component 1 (evaluation features), the other two on component 2 (run the alignment). Divide the roles amongst yourselves. Components 1 and 2 should eventually lead to the evaluation itself, but the evaluation will probably be performed iteratively (e.g. going back and forth between what to evaluate and run code). Make a simple workplan (roles, moments of means of communication), and send it to the instructors before the end of the day. Presentations We will discuss the results of each group based on presentations. Each group will have 10 minutes for its presentation (~ 10 ppt slides), followed by 5 minutes discussion. Material Project 1: Short-read RNA-seq hisat2 (splice-aware) vs bwa mem (splice unaware?) Reads are from this paper , and here\u2019s the SRA page . Reads have been downloaded, and can be found at /data/reads/toxoplasma . Compare the two aligners. In particular, you could try answering the following questions: Is there a difference in computational speed? What are the alignment rates? How do the aligners handle splicing? How are spliced alignments stored in the SAM file? Do you see differences in soft clipping? What would be the effect of the aligner if you would be measuring gene expression? (To investigate this you\u2019ll need to run e.g. featureCounts ). Example code hisat2 Everything in between <> should be replaced with specific arguments hisat2-build <reference_sequence_fasta> <index_basename> hisat2 \\ -x <index_basename> \\ -1 <mate1.fastq.gz> \\ -2 <mate2.fastq.gz> \\ -p <threads> \\ | samtools sort \\ | samtools view -bh \\ > <alignment_file.bam> Hint Have a look at IGV on a particular gene, e.g. Nbr1 Project 2: Long-read genome sequencing https://github.com/Magdoll/cDNA_Cupcake/wiki/Best-practice-for-aligning-Iso-Seq-to-reference-genome:-minimap2,-deSALT,-GMAP,-STAR,-BLAT#refstar https://www.ncbi.nlm.nih.gov/sra/?term=SRR5286960 compare hisat2 and minimap2 Have a look at the quality report. What are the average read lengths? What is the average read quality? What kind of accuracy would you expect? Is there a difference in computational speed? What are the differences in alignment rates?","title":"Group work - organisation"},{"location":"day2/group_work/#the-projects","text":"There are two different projects you can choose from: Evaluate two aligners to align short-read RNA-seq data Evaluate two aligners to align long-read genomic data","title":"The projects"},{"location":"day2/group_work/#roles-organisation","text":"For both projects, there are three important components: What makes an aligner suitable for the job, i.e. on what features should it be evaluated? Run and visualise the alignment The evaluation itself We will be working in groups of four people. At the start of the project, 2 people will focus on component 1 (evaluation features), the other two on component 2 (run the alignment). Divide the roles amongst yourselves. Components 1 and 2 should eventually lead to the evaluation itself, but the evaluation will probably be performed iteratively (e.g. going back and forth between what to evaluate and run code). Make a simple workplan (roles, moments of means of communication), and send it to the instructors before the end of the day.","title":"Roles &amp; organisation"},{"location":"day2/group_work/#presentations","text":"We will discuss the results of each group based on presentations. Each group will have 10 minutes for its presentation (~ 10 ppt slides), followed by 5 minutes discussion.","title":"Presentations"},{"location":"day2/group_work/#material","text":"","title":"Material"},{"location":"day2/group_work/#project-1-short-read-rna-seq","text":"hisat2 (splice-aware) vs bwa mem (splice unaware?) Reads are from this paper , and here\u2019s the SRA page . Reads have been downloaded, and can be found at /data/reads/toxoplasma . Compare the two aligners. In particular, you could try answering the following questions: Is there a difference in computational speed? What are the alignment rates? How do the aligners handle splicing? How are spliced alignments stored in the SAM file? Do you see differences in soft clipping? What would be the effect of the aligner if you would be measuring gene expression? (To investigate this you\u2019ll need to run e.g. featureCounts ). Example code hisat2 Everything in between <> should be replaced with specific arguments hisat2-build <reference_sequence_fasta> <index_basename> hisat2 \\ -x <index_basename> \\ -1 <mate1.fastq.gz> \\ -2 <mate2.fastq.gz> \\ -p <threads> \\ | samtools sort \\ | samtools view -bh \\ > <alignment_file.bam> Hint Have a look at IGV on a particular gene, e.g. Nbr1","title":"Project 1: Short-read RNA-seq"},{"location":"day2/group_work/#project-2-long-read-genome-sequencing","text":"https://github.com/Magdoll/cDNA_Cupcake/wiki/Best-practice-for-aligning-Iso-Seq-to-reference-genome:-minimap2,-deSALT,-GMAP,-STAR,-BLAT#refstar https://www.ncbi.nlm.nih.gov/sra/?term=SRR5286960 compare hisat2 and minimap2 Have a look at the quality report. What are the average read lengths? What is the average read quality? What kind of accuracy would you expect? Is there a difference in computational speed? What are the differences in alignment rates?","title":"Project 2: Long-read genome sequencing"},{"location":"day2/igv_visualisation/","text":"Material The exercises below are partly based on this tutorial from the Griffith lab . Exercises 1. A first glance: the E. coli dataset Index the alignment that was filtered for the region between 2000 and 2500 kb: cd ~/ecoli/mapping_output samtools index SRR519926.sorted.region.bam Download it together with it\u2019s index file ( SRR519926.sorted.region.bam.bai ) and the reference genome ( ecoli-strK12-MG1655.fasta ) to your desktop. Load the genome ( .fasta ) into IGV: Genomes > Load Genome from File\u2026 Load the alignment file ( .bam ): File > Load from File\u2026 Zoom in into the region U00096.3:2046000-2048000. You can do this in two ways: With the search box Select the region in the location bar View the reads as pairs, by right click on the reads and select View as pairs Exercise: There are lot of reads that are coloured red. Why is that? Answer According to IGV , reads are coloured red if the insert size is larger than expected. As you remember, this dataset has a very large variation in insert size. Modify the popup text behaviour by clicking on the yellow balloon to Show Details on Click : Exercise: Click on one of the reads. What kind of information is there? Answer Most of the information from the SAM file. Colour the alignment by pair orientation by right clicking on the reads, and click Color alignments by > read strand . 2. More functionality: hg18 A lot of model-organism genomes are built-in IGV. Select the human genome version hg18 from the drop down menu: Other reference genomes If your genome is not in the short list, more reference genomes can be found in the same drop-down menu at More.. Load sample data of the human genome from File > Load from Server\u2026 . And select the SNP validation dataset: Exercise: Check out the tracks that appeared. What kind of files did we just load? Answer We have loaded: a coverage track (WGS Alignments Coverage), generated by IGV based on alignment file. a sequence alignment track (WGS alignments), probably a BAM file a track with SNPs (SNP Calls), a bed file The track \u201cRefSeq genes\u201d was already there and came with the genome. Navigate to the gene CLSTN1 by typing it in the search box. Likewise (i.e. by typing it in the search box), navigate to SNP1 that is annotated in the bed file. Click on the coverage track where the SNP is: Exercise: What is the sequence coverage for that base? And the percentage C? Answer The coverage is 43, and 17 reads (40%) C. 3. HCC1143 data set For this part, we will be using publicly available Illumina sequence data generated for the HCC1143 cell line. The HCC1143 cell line was generated from a 52 year old caucasian woman with breast cancer. Sequence reads were aligned to version GRCh37 of the human reference genome. We will be working with subsets of aligned reads in the region: chromosome 21: 19,000,000 - 20,000,000. The BAM files containing these reads for the cancer cell line and the matched normal are: HCC1143.normal.21.19M-20M.bam HCC1143.normal.21.19M-20M.bam.bai First we ensure that IGV is using the same reference genome as our bam file. In this case the reads are aligned to GRCh37, also known as hg19. Select Human hg19 from the drop-down list in the top left of the IGV window. Select File > Load from File\u2026 from the main menu and select the BAM file HCC1143.normal.21.19M-20M.bam using the file browser. This BAM file only contains data for a 1 Megabase region of chromosome 21. Let\u2019s navigate there to see what genes this region covers. To do so, navigate to chr21:19,000,000-20,000,000 . Navigate to region chr21:19,800,320-19,818,162 Load repeat tracks by selecting File > Load from Server\u2026 from the main menu and then select Annotations > Variation and Repeats > Repeat Masker Right click in the alignment track and select Color alignments by > insert size and pair orientation Exercise: Why are some reads coloured white? What can be the cause of that? Answer The white coloured reads have a map quality of 0 (click on the read to find the mapping quality). The cause of that is a LINE repeat region called L1PA3. Navigate to region chr21:19,324,500-19,331,500 Right click in the main alignment track and select: Expanded View as pairs Color alignments by > insert size and pair orientation Sort alignments by > insert size Exercise: What is the insert size of the red flagged read pairs? Can you estimate the size of the deletion? Answer The insert size is about 2.8 kb. This includes the reads. The deletion should be about 2.5 - 2.6 kb.","title":"IGV and visualisation"},{"location":"day2/igv_visualisation/#material","text":"The exercises below are partly based on this tutorial from the Griffith lab .","title":"Material"},{"location":"day2/igv_visualisation/#exercises","text":"","title":"Exercises"},{"location":"day2/igv_visualisation/#1-a-first-glance-the-e-coli-dataset","text":"Index the alignment that was filtered for the region between 2000 and 2500 kb: cd ~/ecoli/mapping_output samtools index SRR519926.sorted.region.bam Download it together with it\u2019s index file ( SRR519926.sorted.region.bam.bai ) and the reference genome ( ecoli-strK12-MG1655.fasta ) to your desktop. Load the genome ( .fasta ) into IGV: Genomes > Load Genome from File\u2026 Load the alignment file ( .bam ): File > Load from File\u2026 Zoom in into the region U00096.3:2046000-2048000. You can do this in two ways: With the search box Select the region in the location bar View the reads as pairs, by right click on the reads and select View as pairs Exercise: There are lot of reads that are coloured red. Why is that? Answer According to IGV , reads are coloured red if the insert size is larger than expected. As you remember, this dataset has a very large variation in insert size. Modify the popup text behaviour by clicking on the yellow balloon to Show Details on Click : Exercise: Click on one of the reads. What kind of information is there? Answer Most of the information from the SAM file. Colour the alignment by pair orientation by right clicking on the reads, and click Color alignments by > read strand .","title":"1. A first glance: the E. coli dataset"},{"location":"day2/igv_visualisation/#2-more-functionality-hg18","text":"A lot of model-organism genomes are built-in IGV. Select the human genome version hg18 from the drop down menu: Other reference genomes If your genome is not in the short list, more reference genomes can be found in the same drop-down menu at More.. Load sample data of the human genome from File > Load from Server\u2026 . And select the SNP validation dataset: Exercise: Check out the tracks that appeared. What kind of files did we just load? Answer We have loaded: a coverage track (WGS Alignments Coverage), generated by IGV based on alignment file. a sequence alignment track (WGS alignments), probably a BAM file a track with SNPs (SNP Calls), a bed file The track \u201cRefSeq genes\u201d was already there and came with the genome. Navigate to the gene CLSTN1 by typing it in the search box. Likewise (i.e. by typing it in the search box), navigate to SNP1 that is annotated in the bed file. Click on the coverage track where the SNP is: Exercise: What is the sequence coverage for that base? And the percentage C? Answer The coverage is 43, and 17 reads (40%) C.","title":"2. More functionality: hg18"},{"location":"day2/igv_visualisation/#3-hcc1143-data-set","text":"For this part, we will be using publicly available Illumina sequence data generated for the HCC1143 cell line. The HCC1143 cell line was generated from a 52 year old caucasian woman with breast cancer. Sequence reads were aligned to version GRCh37 of the human reference genome. We will be working with subsets of aligned reads in the region: chromosome 21: 19,000,000 - 20,000,000. The BAM files containing these reads for the cancer cell line and the matched normal are: HCC1143.normal.21.19M-20M.bam HCC1143.normal.21.19M-20M.bam.bai First we ensure that IGV is using the same reference genome as our bam file. In this case the reads are aligned to GRCh37, also known as hg19. Select Human hg19 from the drop-down list in the top left of the IGV window. Select File > Load from File\u2026 from the main menu and select the BAM file HCC1143.normal.21.19M-20M.bam using the file browser. This BAM file only contains data for a 1 Megabase region of chromosome 21. Let\u2019s navigate there to see what genes this region covers. To do so, navigate to chr21:19,000,000-20,000,000 . Navigate to region chr21:19,800,320-19,818,162 Load repeat tracks by selecting File > Load from Server\u2026 from the main menu and then select Annotations > Variation and Repeats > Repeat Masker Right click in the alignment track and select Color alignments by > insert size and pair orientation Exercise: Why are some reads coloured white? What can be the cause of that? Answer The white coloured reads have a map quality of 0 (click on the read to find the mapping quality). The cause of that is a LINE repeat region called L1PA3. Navigate to region chr21:19,324,500-19,331,500 Right click in the main alignment track and select: Expanded View as pairs Color alignments by > insert size and pair orientation Sort alignments by > insert size Exercise: What is the insert size of the red flagged read pairs? Can you estimate the size of the deletion? Answer The insert size is about 2.8 kb. This includes the reads. The deletion should be about 2.5 - 2.6 kb.","title":"3. HCC1143 data set"},{"location":"day2/samtools/","text":"Material samtools documentation Exercises 1. Alignment statistics 10 minutes Exercise: Check out the statistics of the E. coli alignment by using samtools flagstat . Find the documentation here . Anything that draws your attention? Answer Code: cd ~/ecoli/mapping_output/ samtools flagstat SRR519926.sam resulting in: 529562 + 0 in total (QC-passed reads + QC-failed reads) 0 + 0 secondary 0 + 0 supplementary 0 + 0 duplicates 526159 + 0 mapped (99.36% : N/A) 529562 + 0 paired in sequencing 264781 + 0 read1 264781 + 0 read2 203576 + 0 properly paired (38.44% : N/A) 523484 + 0 with itself and mate mapped 2675 + 0 singletons (0.51% : N/A) 0 + 0 with mate mapped to a different chr 0 + 0 with mate mapped to a different chr (mapQ>=5) Of the reads, 38.44% is properly paired. The rest isn\u2019t. Proper pairing is quite hard to interpret. It usually means that the 0x2 flag (each segment properly aligned according to the aligner) is false. In this case it means that the insert size is high for a lot of sequences. That is because the insert size distribution is very wide. You can find info on insert size distribution like this: samtools stats SRR519926.sam | grep ^SN | cut -f 2,3 Now look at insert size average and insert size standard deviation . You can see the standard deviation is higher than the average, suggesting a wide distribution. 2. Compression, sorting and indexing 20 minutes The command samtools view is very versatile. It takes an alignment file and writes a filtered or processed alignment to the output. You can for example use it to compress your SAM file into a BAM file. Let\u2019s start with that. Exercise : compress our SAM file into a BAM file and include the header in the output. For this, use the -b and -h options. Find the required documentation here . How much was the disk space reduced by compressing the file? Tip: Samtools writes to stdout By default, samtools writes it\u2019s output to stdout. This means that you need to redirect your output to a file with > or use the the output option -o . Answer samtools view -bh SRR519926.sam > SRR519926.bam By using ls -lh , you can find out that SRR519926.sam has a size of 223 Mb, while SRR519926.bam is only 66 Mb. To look up specific alignments, it is convenient to have your alignment file indexed. An indexing can be compared to a kind of \u2018phonebook\u2019 of your sequence alignment file. Indexing can be done with samtools as well, but it first needs to be sorted on coordinate (i.e. the alignment location). You can do it like this: samtools sort SRR519926.bam > SRR519926.sorted.bam samtools index SRR519926.sorted.bam 3. Filtering 30 minutes With samtools view you can easily filter your alignment file based on flags. One thing that might be sensible to do at some point is to filter out unmapped reads. Exercise: Check out the flag that you would need to filter for mapped reads. It\u2019s at page 7 of the SAM documentation . Answer You will need the 0x4 flag. Filtering against unmapped reads (leaving only mapped reads) with samtools view would look like this: samtools view -bh -F 0x4 SRR519926.sorted.bam > SRR519926.sorted.mapped.bam Exercise: Write a command that outputs only the unmapped reads (so the opposite of the example). How many reads are in there? Is that the same to what we expect based on the output of samtools flagstat ? Tip Check out the -f and -c options of samtools view Answer Filter like this: samtools view -bh -f 0x4 SRR519926.sorted.bam > SRR519926.sorted.unmapped.bam Counting like this: samtools view -c SRR519926.sorted.unmapped.bam This corresponds to the output of samtools flagstat (529562 - 526159 = 3403) samtools view also enables you to filter alignments in a specific region. This can be convenient if you don\u2019t want to work with huge alignment files and if you\u2019re only interested in alignments in a particular region. Region filtering only works for sorted and indexed alignment files. Exercise: Filter our sorted and indexed BAM file for the region between 2000 and 2500 kb, and output it as a BAM file with a header. Tip: Specifying a region Our E. coli genome has only one chromosome, because only one line starts with > in the fasta file cd ~/ecoli/ref_genome grep \">\" ecoli-strK12-MG1655.fasta gives: >U00096.3 Escherichia coli str. K-12 substr. MG1655, complete genome The part after the first space in the title is cut off for the alignment reference. So the code for specifying a region would be: U00096.3:START-END Answer samtools view -bh SRR519926.sorted.bam U00096.3:2000000-2500000 > SRR519926.sorted.region.bam 4. Redirection 20 minutes Samtools is easy to use in a pipe. In this case you can replace the input file with a - . For example, you can sort and compress the output of your alignment software in a pipe like this: my_alignment_command \\ | samtools sort - \\ | samtools view -bh - \\ > alignment.bam The use of - In the modern versions of samtools, the use of - is not needed for most cases, so without an input file it reads from stdin. However, if you\u2019re not sure, it\u2019s better to be safe than sorry. Exercise: Write a script that maps the reads with bowtie2, sorts them, takes only the mapped reads, and outputs them as a BAM file with a header. Answer ##!/usr/bin/env bash TRIMMED_DIR=/home/training/ecoli/trimmed_data REFERENCE_DIR=/home/training/ecoli/ref_genome/ MAPPED_DIR=/home/training/ecoli/mapping_output bowtie2 \\ -x $REFERENCE_DIR/ecoli-strK12-MG1655.fasta \\ -1 $TRIMMED_DIR/paired_trimmed_SRR519926_1.fastq \\ -2 $TRIMMED_DIR/paired_trimmed_SRR519926_2.fastq \\ | samtools sort - \\ | samtools view -F 0x4 -bh - \\ > $MAPPED_DIR/SRR519926.sorted.mapped.frompipe.bam","title":"Samtools"},{"location":"day2/samtools/#material","text":"samtools documentation","title":"Material"},{"location":"day2/samtools/#exercises","text":"","title":"Exercises"},{"location":"day2/samtools/#1-alignment-statistics","text":"10 minutes Exercise: Check out the statistics of the E. coli alignment by using samtools flagstat . Find the documentation here . Anything that draws your attention? Answer Code: cd ~/ecoli/mapping_output/ samtools flagstat SRR519926.sam resulting in: 529562 + 0 in total (QC-passed reads + QC-failed reads) 0 + 0 secondary 0 + 0 supplementary 0 + 0 duplicates 526159 + 0 mapped (99.36% : N/A) 529562 + 0 paired in sequencing 264781 + 0 read1 264781 + 0 read2 203576 + 0 properly paired (38.44% : N/A) 523484 + 0 with itself and mate mapped 2675 + 0 singletons (0.51% : N/A) 0 + 0 with mate mapped to a different chr 0 + 0 with mate mapped to a different chr (mapQ>=5) Of the reads, 38.44% is properly paired. The rest isn\u2019t. Proper pairing is quite hard to interpret. It usually means that the 0x2 flag (each segment properly aligned according to the aligner) is false. In this case it means that the insert size is high for a lot of sequences. That is because the insert size distribution is very wide. You can find info on insert size distribution like this: samtools stats SRR519926.sam | grep ^SN | cut -f 2,3 Now look at insert size average and insert size standard deviation . You can see the standard deviation is higher than the average, suggesting a wide distribution.","title":"1. Alignment statistics"},{"location":"day2/samtools/#2-compression-sorting-and-indexing","text":"20 minutes The command samtools view is very versatile. It takes an alignment file and writes a filtered or processed alignment to the output. You can for example use it to compress your SAM file into a BAM file. Let\u2019s start with that. Exercise : compress our SAM file into a BAM file and include the header in the output. For this, use the -b and -h options. Find the required documentation here . How much was the disk space reduced by compressing the file? Tip: Samtools writes to stdout By default, samtools writes it\u2019s output to stdout. This means that you need to redirect your output to a file with > or use the the output option -o . Answer samtools view -bh SRR519926.sam > SRR519926.bam By using ls -lh , you can find out that SRR519926.sam has a size of 223 Mb, while SRR519926.bam is only 66 Mb. To look up specific alignments, it is convenient to have your alignment file indexed. An indexing can be compared to a kind of \u2018phonebook\u2019 of your sequence alignment file. Indexing can be done with samtools as well, but it first needs to be sorted on coordinate (i.e. the alignment location). You can do it like this: samtools sort SRR519926.bam > SRR519926.sorted.bam samtools index SRR519926.sorted.bam","title":"2. Compression, sorting and indexing"},{"location":"day2/samtools/#3-filtering","text":"30 minutes With samtools view you can easily filter your alignment file based on flags. One thing that might be sensible to do at some point is to filter out unmapped reads. Exercise: Check out the flag that you would need to filter for mapped reads. It\u2019s at page 7 of the SAM documentation . Answer You will need the 0x4 flag. Filtering against unmapped reads (leaving only mapped reads) with samtools view would look like this: samtools view -bh -F 0x4 SRR519926.sorted.bam > SRR519926.sorted.mapped.bam Exercise: Write a command that outputs only the unmapped reads (so the opposite of the example). How many reads are in there? Is that the same to what we expect based on the output of samtools flagstat ? Tip Check out the -f and -c options of samtools view Answer Filter like this: samtools view -bh -f 0x4 SRR519926.sorted.bam > SRR519926.sorted.unmapped.bam Counting like this: samtools view -c SRR519926.sorted.unmapped.bam This corresponds to the output of samtools flagstat (529562 - 526159 = 3403) samtools view also enables you to filter alignments in a specific region. This can be convenient if you don\u2019t want to work with huge alignment files and if you\u2019re only interested in alignments in a particular region. Region filtering only works for sorted and indexed alignment files. Exercise: Filter our sorted and indexed BAM file for the region between 2000 and 2500 kb, and output it as a BAM file with a header. Tip: Specifying a region Our E. coli genome has only one chromosome, because only one line starts with > in the fasta file cd ~/ecoli/ref_genome grep \">\" ecoli-strK12-MG1655.fasta gives: >U00096.3 Escherichia coli str. K-12 substr. MG1655, complete genome The part after the first space in the title is cut off for the alignment reference. So the code for specifying a region would be: U00096.3:START-END Answer samtools view -bh SRR519926.sorted.bam U00096.3:2000000-2500000 > SRR519926.sorted.region.bam","title":"3. Filtering"},{"location":"day2/samtools/#4-redirection","text":"20 minutes Samtools is easy to use in a pipe. In this case you can replace the input file with a - . For example, you can sort and compress the output of your alignment software in a pipe like this: my_alignment_command \\ | samtools sort - \\ | samtools view -bh - \\ > alignment.bam The use of - In the modern versions of samtools, the use of - is not needed for most cases, so without an input file it reads from stdin. However, if you\u2019re not sure, it\u2019s better to be safe than sorry. Exercise: Write a script that maps the reads with bowtie2, sorts them, takes only the mapped reads, and outputs them as a BAM file with a header. Answer ##!/usr/bin/env bash TRIMMED_DIR=/home/training/ecoli/trimmed_data REFERENCE_DIR=/home/training/ecoli/ref_genome/ MAPPED_DIR=/home/training/ecoli/mapping_output bowtie2 \\ -x $REFERENCE_DIR/ecoli-strK12-MG1655.fasta \\ -1 $TRIMMED_DIR/paired_trimmed_SRR519926_1.fastq \\ -2 $TRIMMED_DIR/paired_trimmed_SRR519926_2.fastq \\ | samtools sort - \\ | samtools view -F 0x4 -bh - \\ > $MAPPED_DIR/SRR519926.sorted.mapped.frompipe.bam","title":"4. Redirection"}]}